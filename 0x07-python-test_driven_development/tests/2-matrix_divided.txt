The ``2-matrix_divided.py`` module
======================

Using ``matrix_divided``
-------------------

Import function from module:
	
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test matrix must be a list of lists:

	>>> matrix = "string"
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix must be a list of lists:

	>>> matrix = "string"
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test Each row of the matrix must be of the same size:

	>>> matrix = [[1, 2, 3], [1, 2, 3, 4]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Test matrix must be a matrix (array of arrays of integers/floats):

	>>> matrix = [[3, "9"], [15, 3]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test division by zero:

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Test division by integer:

	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test division by string:

	>>> matrix_divided(matrix, "3")
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Test missing one argument:

	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test missing argument:

	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test float(inf):

	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
